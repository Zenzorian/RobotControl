using UnityEngine;
using Scripts.Services;

namespace Scripts.Utils
{
    public class VideoDebugCommands : MonoBehaviour
    {
        private IOptimizedRobotVideoService _videoService;
        
        private void Start()
        {
            FindVideoService();
        }
        
        private void FindVideoService()
        {
            var videoServiceObj = GameObject.FindObjectOfType<OptimizedRobotVideoService>();
            if (videoServiceObj != null)
            {
                _videoService = videoServiceObj;
                Debug.Log("VideoDebugCommands: –°–µ—Ä–≤–∏—Å –≤–∏–¥–µ–æ –Ω–∞–π–¥–µ–Ω");
            }
        }
        
        private void Update()
        {
            // –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            if (Input.GetKeyDown(KeyCode.F1))
            {
                CheckVideoStatus();
            }
            
            if (Input.GetKeyDown(KeyCode.F2))
            {
                LogDetailedVideoStats();
            }
            
            if (Input.GetKeyDown(KeyCode.F3))
            {
                ResetVideoStats();
            }
            
            if (Input.GetKeyDown(KeyCode.F4))
            {
                RequestVideoStream();
            }
        }
        
        [ContextMenu("Check Video Status")]
        public void CheckVideoStatus()
        {
            if (_videoService == null)
            {
                FindVideoService();
            }
            
            if (_videoService == null)
            {
                Debug.LogError("‚ùå –í–∏–¥–µ–æ —Å–µ—Ä–≤–∏—Å –Ω–µ –Ω–∞–π–¥–µ–Ω!");
                return;
            }
            
            bool videoReceived;
            int totalMessages, videoMessages, invalidFrames;
            _videoService.GetDetailedVideoStats(out videoReceived, out totalMessages, out videoMessages, out invalidFrames);
            
            string status = $"üîç –ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê –í–ò–î–ï–û:\n" +
                          $"‚Ä¢ –í–∏–¥–µ–æ –ø–æ–ª—É—á–µ–Ω–æ: {(videoReceived ? "‚úÖ –î–ê" : "‚ùå –ù–ï–¢")}\n" +
                          $"‚Ä¢ FPS: {_videoService.CurrentFPS:F1}\n" +
                          $"‚Ä¢ –ö–∞–¥—Ä–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {_videoService.ReceivedFrames}\n" +
                          $"‚Ä¢ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {totalMessages}\n" +
                          $"‚Ä¢ –í–∏–¥–µ–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {videoMessages}";
            
            Debug.Log(status);
            
            if (!videoReceived && totalMessages > 0)
            {
                Debug.LogWarning("‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê: –°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—É—á–∞–µ–º, –Ω–æ –≤–∏–¥–µ–æ –ù–ï–¢!");
            }
            else if (!videoReceived)
            {
                Debug.LogWarning("‚ö†Ô∏è –í–∏–¥–µ–æ –Ω–µ –ø–æ–ª—É—á–µ–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ–±–æ—Ç–∞.");
            }
        }
        
        [ContextMenu("Log Detailed Video Stats")]
        public void LogDetailedVideoStats()
        {
            if (_videoService == null)
            {
                FindVideoService();
            }
            
            if (_videoService != null)
            {
                string report = _videoService.GetVideoStatusReport();
                Debug.Log("üìä –ü–û–î–†–û–ë–ù–´–ô –û–¢–ß–ï–¢ –û –í–ò–î–ï–û:\n" + report);
                
                _videoService.ForceVideoStatusLog();
            }
            else
            {
                Debug.LogError("‚ùå –í–∏–¥–µ–æ —Å–µ—Ä–≤–∏—Å –Ω–µ –Ω–∞–π–¥–µ–Ω!");
            }
        }
        
        [ContextMenu("Reset Video Stats")]
        public void ResetVideoStats()
        {
            if (_videoService == null)
            {
                FindVideoService();
            }
            
            if (_videoService != null)
            {
                _videoService.ResetStats();
                Debug.Log("üîÑ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∏–¥–µ–æ —Å–±—Ä–æ—à–µ–Ω–∞");
            }
            else
            {
                Debug.LogError("‚ùå –í–∏–¥–µ–æ —Å–µ—Ä–≤–∏—Å –Ω–µ –Ω–∞–π–¥–µ–Ω!");
            }
        }
        
        [ContextMenu("Request Video Stream")]
        public void RequestVideoStream()
        {
            if (_videoService == null)
            {
                FindVideoService();
            }
            
            if (_videoService != null)
            {
                _videoService.RequestVideoStream();
                Debug.Log("üì∫ –ó–∞–ø—Ä–æ—Å –≤–∏–¥–µ–æ –ø–æ—Ç–æ–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω");
            }
            else
            {
                Debug.LogError("‚ùå –í–∏–¥–µ–æ —Å–µ—Ä–≤–∏—Å –Ω–µ –Ω–∞–π–¥–µ–Ω!");
            }
        }
        
        [ContextMenu("Stop Video Stream")]
        public void StopVideoStream()
        {
            if (_videoService == null)
            {
                FindVideoService();
            }
            
            if (_videoService != null)
            {
                _videoService.StopVideoStream();
                Debug.Log("‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–∏–¥–µ–æ –ø–æ—Ç–æ–∫–∞");
            }
            else
            {
                Debug.LogError("‚ùå –í–∏–¥–µ–æ —Å–µ—Ä–≤–∏—Å –Ω–µ –Ω–∞–π–¥–µ–Ω!");
            }
        }
        
        private void OnGUI()
        {
            // –ü—Ä–æ—Å—Ç–æ–π GUI –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            GUILayout.BeginArea(new Rect(10, 10, 300, 200));
            GUILayout.Label("üé• –û–¢–õ–ê–î–ö–ê –í–ò–î–ï–û");
            
            if (GUILayout.Button("F1: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤–∏–¥–µ–æ"))
            {
                CheckVideoStatus();
            }
            
            if (GUILayout.Button("F2: –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"))
            {
                LogDetailedVideoStats();
            }
            
            if (GUILayout.Button("F3: –°–±—Ä–æ—Å–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"))
            {
                ResetVideoStats();
            }
            
            if (GUILayout.Button("F4: –ó–∞–ø—Ä–æ—Å–∏—Ç—å –≤–∏–¥–µ–æ"))
            {
                RequestVideoStream();
            }
            
            // –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ç—É—Å
            if (_videoService != null)
            {
                GUILayout.Space(10);
                GUILayout.Label($"–í–∏–¥–µ–æ: {(_videoService.VideoReceived ? "‚úÖ" : "‚ùå")} | FPS: {_videoService.CurrentFPS:F1}");
                GUILayout.Label($"–ö–∞–¥—Ä–æ–≤: {_videoService.ReceivedFrames} | –°–æ–æ–±—â–µ–Ω–∏–π: {_videoService.TotalMessages}");
            }
            
            GUILayout.EndArea();
        }
    }
} 