// using UnityEngine;
// using UnityEngine.UI;
// using System;
// using Scripts.Services;

// namespace Scripts.Services.RobotVideoProcessing
// {
//     /// <summary>
//     /// –ú–µ–Ω–µ–¥–∂–µ—Ä WebRTC –≤–∏–¥–µ–æ –¥–ª—è Unity –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç Unity.WebRTC –ø–∞–∫–µ—Ç–∞
//     /// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–∏–≥–Ω–∞–ª–∏–Ω–≥ –∏ –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–∏–¥–µ–æ
//     /// </summary>
//     public class WebRTCVideoManager : MonoBehaviour, IWebRTCVideoService
//     {
//         [Header("UI Components")]
//         [SerializeField] private RawImage videoDisplay;
//         [SerializeField] private Button requestVideoButton;
//         [SerializeField] private Text statusText;
//         [SerializeField] private Text connectionStatusText;

//         [Header("Video Settings")]
//         [SerializeField] private int videoWidth = 640;
//         [SerializeField] private int videoHeight = 480;
//         [SerializeField] private int targetFPS = 30;

//         // –°–µ—Ä–≤–∏—Å—ã –∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
//         private IWebSocketClient _webSocketClient;
//         private string _currentSessionId;
//         private bool _isInitialized = false;
//         private bool _isConnected = false;
//         private bool _videoRequested = false;

//         // –°–æ–±—ã—Ç–∏—è
//         public event Action<bool> OnConnectionStateChanged;
//         public event Action<RenderTexture> OnVideoTextureReady;
//         public event Action<string> OnError;

//         // –°–≤–æ–π—Å—Ç–≤–∞
//         public bool IsConnected => _isConnected;
//         public RenderTexture VideoTexture { get; private set; }

//         private void Awake()
//         {
//             // –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –≤–∏–¥–µ–æ —Ç–µ–∫—Å—Ç—É—Ä—ã
//             VideoTexture = new RenderTexture(videoWidth, videoHeight, 0, RenderTextureFormat.BGRA32);
//             VideoTexture.Create();

//             // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω
//             CreateTestPattern();
//         }

//         private void Start()
//         {
//             // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UI
//             if (requestVideoButton != null)
//             {
//                 requestVideoButton.onClick.AddListener(RequestVideoStream);
//             }

//             UpdateStatus("WebRTC Video Manager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
//         }

//         /// <summary>
//         /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å WebSocket –∫–ª–∏–µ–Ω—Ç–æ–º
//         /// </summary>
//         public bool Initialize()
//         {
//             try
//             {
//                 if (_isInitialized)
//                 {
//                     Debug.LogWarning("WebRTC Video Manager —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
//                     return true;
//                 }

//                 Debug.Log("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebRTC Video Manager...");

//                 // –ü–æ–ª—É—á–∞–µ–º WebSocket –∫–ª–∏–µ–Ω—Ç –∏–∑ —Å–∏—Å—Ç–µ–º—ã
//                 var webSocketService = FindObjectOfType<MonoBehaviour>()?.GetComponent<IWebSocketClient>();
//                 if (webSocketService == null)
//                 {
//                     Debug.LogError("‚ùå WebSocket –∫–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω");
//                     return false;
//                 }

//                 _webSocketClient = webSocketService;
//                 _webSocketClient.OnMessageReceived += HandleWebSocketMessage;

//                 // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≤–∏–¥–µ–æ –¥–∏—Å–ø–ª–µ–π
//                 if (videoDisplay != null)
//                 {
//                     videoDisplay.texture = VideoTexture;
//                 }

//                 _isInitialized = true;
//                 UpdateStatus("‚úÖ WebRTC –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
//                 Debug.Log("‚úÖ WebRTC Video Manager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ");

//                 return true;
//             }
//             catch (Exception ex)
//             {
//                 Debug.LogError($"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ WebRTC: {ex.Message}");
//                 OnError?.Invoke(ex.Message);
//                 UpdateStatus($"‚ùå –û—à–∏–±–∫–∞: {ex.Message}");
//                 return false;
//             }
//         }

//         /// <summary>
//         /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º WebSocket –∫–ª–∏–µ–Ω—Ç–æ–º
//         /// </summary>
//         public void Initialize(IWebSocketClient webSocketClient)
//         {
//             _webSocketClient = webSocketClient;
//             _webSocketClient.OnMessageReceived += HandleWebSocketMessage;
//             _isInitialized = true;
//             UpdateStatus("‚úÖ WebRTC –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å WebSocket –∫–ª–∏–µ–Ω—Ç–æ–º");
//         }

//         /// <summary>
//         /// –ó–∞–ø—Ä–æ—Å –≤–∏–¥–µ–æ –ø–æ—Ç–æ–∫–∞ –æ—Ç —Ä–æ–±–æ—Ç–∞
//         /// </summary>
//         public void RequestVideoStream()
//         {
//             try
//             {
//                 if (!_isInitialized)
//                 {
//                     Debug.LogError("WebRTC –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
//                     UpdateStatus("‚ùå WebRTC –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
//                     return;
//                 }

//                 if (_webSocketClient == null || !_webSocketClient.IsConnected)
//                 {
//                     Debug.LogError("WebSocket –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω");
//                     UpdateStatus("‚ùå WebSocket –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω");
//                     return;
//                 }

//                 Debug.Log("üìπ –ó–∞–ø—Ä–æ—Å –≤–∏–¥–µ–æ –ø–æ—Ç–æ–∫–∞ –æ—Ç —Ä–æ–±–æ—Ç–∞...");
//                 UpdateStatus("üìπ –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≤–∏–¥–µ–æ –ø–æ—Ç–æ–∫...");

//                 _webSocketClient.SendMessage("REQUEST_VIDEO");
//                 _videoRequested = true;

//                 // –û–±–Ω–æ–≤–ª—è–µ–º UI
//                 if (requestVideoButton != null)
//                 {
//                     requestVideoButton.interactable = false;
//                     requestVideoButton.GetComponentInChildren<Text>().text = "–û–∂–∏–¥–∞–Ω–∏–µ...";
//                 }
//             }
//             catch (Exception ex)
//             {
//                 Debug.LogError($"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤–∏–¥–µ–æ: {ex.Message}");
//                 OnError?.Invoke(ex.Message);
//                 UpdateStatus($"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {ex.Message}");
//             }
//         }

//         /// <summary>
//         /// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–∏–¥–µ–æ –ø–æ—Ç–æ–∫–∞
//         /// </summary>
//         public void StopVideoStream()
//         {
//             try
//             {
//                 Debug.Log("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–∏–¥–µ–æ –ø–æ—Ç–æ–∫–∞...");
//                 UpdateStatus("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–∏–¥–µ–æ –ø–æ—Ç–æ–∫–∞...");

//                 _isConnected = false;
//                 _videoRequested = false;
//                 _currentSessionId = null;

//                 OnConnectionStateChanged?.Invoke(false);

//                 // –û–±–Ω–æ–≤–ª—è–µ–º UI
//                 if (requestVideoButton != null)
//                 {
//                     requestVideoButton.interactable = true;
//                     requestVideoButton.GetComponentInChildren<Text>().text = "–ó–∞–ø—Ä–æ—Å–∏—Ç—å –≤–∏–¥–µ–æ";
//                 }

//                 UpdateStatus("‚úÖ –í–∏–¥–µ–æ –ø–æ—Ç–æ–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω");
//                 Debug.Log("‚úÖ –í–∏–¥–µ–æ –ø–æ—Ç–æ–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω");
//             }
//             catch (Exception ex)
//             {
//                 Debug.LogError($"‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–∏–¥–µ–æ –ø–æ—Ç–æ–∫–∞: {ex.Message}");
//             }
//         }

//         /// <summary>
//         /// –û–±—Ä–∞–±–æ—Ç–∫–∞ WebSocket —Å–æ–æ–±—â–µ–Ω–∏–π
//         /// </summary>
//         private void HandleWebSocketMessage(string message)
//         {
//             try
//             {
//                 Debug.Log($"üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message}");

//                 // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ JSON —Å–æ–æ–±—â–µ–Ω–∏–π
//                 if (message.StartsWith("{") && message.Contains("webrtc-signal"))
//                 {
//                     HandleWebRTCMessage(message);
//                 }
//                 else if (message == "VIDEO_STREAM_READY")
//                 {
//                     HandleVideoStreamReady();
//                 }
//                 else if (message.StartsWith("VIDEO_ERROR"))
//                 {
//                     HandleVideoError(message);
//                 }
//             }
//             catch (Exception ex)
//             {
//                 Debug.LogError($"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ WebSocket —Å–æ–æ–±—â–µ–Ω–∏—è: {ex.Message}");
//             }
//         }

//         /// <summary>
//         /// –û–±—Ä–∞–±–æ—Ç–∫–∞ WebRTC —Å–æ–æ–±—â–µ–Ω–∏–π
//         /// </summary>
//         private void HandleWebRTCMessage(string jsonMessage)
//         {
//             try
//             {
//                 // –ü–∞—Ä—Å–∏–Ω–≥ WebRTC —Å–∏–≥–Ω–∞–ª–æ–≤ —á–µ—Ä–µ–∑ JsonUtility
//                 var baseMessage = JsonUtility.FromJson<WebRTCMessage>(jsonMessage);
                
//                 if (baseMessage == null)
//                 {
//                     Debug.LogWarning("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å WebRTC —Å–æ–æ–±—â–µ–Ω–∏–µ");
//                     return;
//                 }

//                 Debug.Log($"üì° WebRTC —Å–∏–≥–Ω–∞–ª: {baseMessage.signalType} –¥–ª—è —Å–µ—Å—Å–∏–∏: {baseMessage.sessionId}");

//                 switch (baseMessage.signalType)
//                 {
//                     case "offer":
//                         HandleWebRTCOffer(jsonMessage);
//                         break;
//                     case "ice-candidate":
//                         HandleWebRTCIceCandidate(jsonMessage);
//                         break;
//                     default:
//                         Debug.Log($"‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π WebRTC —Å–∏–≥–Ω–∞–ª: {baseMessage.signalType}");
//                         break;
//                 }
//             }
//             catch (Exception ex)
//             {
//                 Debug.LogError($"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ WebRTC —Å–æ–æ–±—â–µ–Ω–∏—è: {ex.Message}");
//             }
//         }

//         /// <summary>
//         /// –û–±—Ä–∞–±–æ—Ç–∫–∞ WebRTC offer
//         /// </summary>
//         private void HandleWebRTCOffer(string jsonMessage)
//         {
//             try
//             {
//                 var offerMessage = JsonUtility.FromJson<WebRTCOfferMessage>(jsonMessage);
//                 if (offerMessage?.data == null)
//                 {
//                     Debug.LogError("–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π WebRTC offer");
//                     return;
//                 }

//                 Debug.Log($"üì° –ü–æ–ª—É—á–µ–Ω WebRTC offer –æ—Ç —Ä–æ–±–æ—Ç–∞ (—Å–µ—Å—Å–∏—è: {offerMessage.sessionId})");
//                 _currentSessionId = offerMessage.sessionId;

//                 UpdateStatus($"üì° –ü–æ–ª—É—á–µ–Ω WebRTC offer (—Å–µ—Å—Å–∏—è: {_currentSessionId})");

//                 // –°–æ–∑–¥–∞–µ–º answer (–≤ —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç WebRTC peer connection)
//                 SendWebRTCAnswer();
//             }
//             catch (Exception ex)
//             {
//                 Debug.LogError($"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ WebRTC offer: {ex.Message}");
//                 OnError?.Invoke(ex.Message);
//             }
//         }

//         /// <summary>
//         /// –û—Ç–ø—Ä–∞–≤–∫–∞ WebRTC answer
//         /// </summary>
//         private void SendWebRTCAnswer()
//         {
//             try
//             {
//                 var answerMessage = new WebRTCAnswerMessage
//                 {
//                     type = "webrtc-signal",
//                     signalType = "answer",
//                     sessionId = _currentSessionId,
//                     data = new WebRTCAnswerData
//                     {
//                         sdp = "v=0\r\no=- 0 0 IN IP4 127.0.0.1\r\ns=-\r\nt=0 0\r\n", // –ó–∞–≥–ª—É—à–∫–∞ SDP
//                         type = "answer",
//                         sessionId = _currentSessionId
//                     }
//                 };

//                 _webSocketClient.SendJsonMessage(answerMessage);
//                 Debug.Log("üì§ WebRTC answer –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Ä–æ–±–æ—Ç—É");
//                 UpdateStatus("üì§ WebRTC answer –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω");

//                 // –°–∏–º—É–ª–∏—Ä—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
//                 Invoke(nameof(SimulateConnectionEstablished), 2.0f);
//             }
//             catch (Exception ex)
//             {
//                 Debug.LogError($"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ answer: {ex.Message}");
//             }
//         }

//         /// <summary>
//         /// –û–±—Ä–∞–±–æ—Ç–∫–∞ ICE –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
//         /// </summary>
//         private void HandleWebRTCIceCandidate(string jsonMessage)
//         {
//             try
//             {
//                 var candidateMessage = JsonUtility.FromJson<WebRTCIceCandidateMessage>(jsonMessage);
//                 if (candidateMessage?.data == null)
//                 {
//                     Debug.LogError("–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π ICE –∫–∞–Ω–¥–∏–¥–∞—Ç");
//                     return;
//                 }

//                 Debug.Log($"üßä –ü–æ–ª—É—á–µ–Ω ICE –∫–∞–Ω–¥–∏–¥–∞—Ç: {candidateMessage.data.candidate}");
//                 UpdateStatus($"üßä –ü–æ–ª—É—á–µ–Ω ICE –∫–∞–Ω–¥–∏–¥–∞—Ç");

//                 // –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–¥–µ—Å—å –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è ICE –∫–∞–Ω–¥–∏–¥–∞—Ç –∫ peer connection
//             }
//             catch (Exception ex)
//             {
//                 Debug.LogError($"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ ICE –∫–∞–Ω–¥–∏–¥–∞—Ç–∞: {ex.Message}");
//             }
//         }

//         /// <summary>
//         /// –°–∏–º—É–ª—è—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
//         /// </summary>
//         private void SimulateConnectionEstablished()
//         {
//             _isConnected = true;
//             OnConnectionStateChanged?.Invoke(true);
//             UpdateStatus("‚úÖ WebRTC —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ");
//             Debug.Log("‚úÖ WebRTC —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ (—Å–∏–º—É–ª—è—Ü–∏—è)");

//             // –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –≤–∏–¥–µ–æ —Ç–µ–∫—Å—Ç—É—Ä—ã
//             OnVideoTextureReady?.Invoke(VideoTexture);
//         }

//         /// <summary>
//         /// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –≤–∏–¥–µ–æ –ø–æ—Ç–æ–∫–∞
//         /// </summary>
//         private void HandleVideoStreamReady()
//         {
//             Debug.Log("‚úÖ –í–∏–¥–µ–æ –ø–æ—Ç–æ–∫ –≥–æ—Ç–æ–≤");
//             UpdateStatus("‚úÖ –í–∏–¥–µ–æ –ø–æ—Ç–æ–∫ –≥–æ—Ç–æ–≤");
//             _isConnected = true;
//             OnConnectionStateChanged?.Invoke(true);
//         }

//         /// <summary>
//         /// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –≤–∏–¥–µ–æ
//         /// </summary>
//         private void HandleVideoError(string errorMessage)
//         {
//             Debug.LogError($"‚ùå –û—à–∏–±–∫–∞ –≤–∏–¥–µ–æ: {errorMessage}");
//             UpdateStatus($"‚ùå {errorMessage}");
//             OnError?.Invoke(errorMessage);
//         }

//         /// <summary>
//         /// –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–∞—Ç—Ç–µ—Ä–Ω–∞
//         /// </summary>
//         private void CreateTestPattern()
//         {
//             if (VideoTexture == null) return;

//             RenderTexture currentRT = RenderTexture.active;
//             RenderTexture.active = VideoTexture;

//             GL.Clear(true, true, Color.black);
            
//             RenderTexture.active = currentRT;
//         }

//         /// <summary>
//         /// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤ UI
//         /// </summary>
//         private void UpdateStatus(string status)
//         {
//             if (statusText != null)
//             {
//                 statusText.text = status;
//             }

//             if (connectionStatusText != null)
//             {
//                 connectionStatusText.text = _isConnected ? "üü¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ" : "üî¥ –û—Ç–∫–ª—é—á–µ–Ω–æ";
//                 connectionStatusText.color = _isConnected ? Color.green : Color.red;
//             }
//         }

//         /// <summary>
//         /// –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
//         /// </summary>
//         public void Dispose()
//         {
//             if (_webSocketClient != null)
//             {
//                 _webSocketClient.OnMessageReceived -= HandleWebSocketMessage;
//             }

//             StopVideoStream();

//             if (VideoTexture != null)
//             {
//                 VideoTexture.Release();
//                 DestroyImmediate(VideoTexture);
//                 VideoTexture = null;
//             }

//             _isInitialized = false;
//             Debug.Log("üóëÔ∏è WebRTC Video Manager –æ—á–∏—â–µ–Ω");
//         }

//         private void OnDestroy()
//         {
//             Dispose();
//         }
//     }
// } 